# --------------------------------------------------------------------------
_safe_add_to_path() {
  local _dir="$1"
  PATH="${PATH#$_dir:}"
  PATH="${PATH/:$_dir/}"
  [[ -d "$_dir" ]] && PATH="${_dir}:$PATH"
  export PATH
}

# --------------------------------------------------------------------------

for dir in \
  /{bin,sbin} \
  /{usr,opt}/{bin,sbin} \
  /{usr,opt,Apps}/{local,X11,opt}/{bin,sbin} \
  /{usr,opt}/local/heroku/bin \
  /Applications/VMware\ Fusion.app/Contents/Library \
  /Applications/Postgres.app/Contents/Versions/latest/bin \
  $HOME/.cargo/bin \
  $HOME/bin
do
  _safe_add_to_path "$dir"
done

# --------------------------------------------------------------------------
# Languages with *env version manangers

for _version_manager in rbenv nodenv exenv goenv ; do
  _safe_add_to_path "$HOME/.${_version_manager}/bin"
  _safe_add_to_path "$HOME/.${_version_manager}/shims"

  if declare -f "${_version_manager}" >& /dev/null ; then
    continue
  fi

  _cmd=$(which "${_version_manager}")

  if [[ -z "$_cmd" ]] ; then
    continue
  fi

  eval "export __${_version_manager}=${_cmd}"
done

if [[ -n "${__rbenv}" ]] ; then
  rbenv() {
    eval "unset -f rbenv ; $(${__rbenv} init ${ZSH_VERSION:+zsh} - )"
    rbenv $*
  }
fi

if [[ -n "${__nodenv}" ]] ; then
  nodenv() {
    eval "unset -f nodenv ; $(${__nodenv} init ${ZSH_VERSION:+zsh} - )"
    _safe_add_to_path "$(dirname \"$(nodenv which npm)\")"
    nodenv $*
  }
fi

if [[ -n "${__exenv}" ]] ; then
  exenv() {
    eval "unset -f exenv ; $(${__exenv} init ${ZSH_VERSION:+zsh} - )"
    exenv $*
  }
fi

if [[ -n "${__goenv}" ]] ; then
  goenv() {
    eval "unset -f goenv ; $(${__goenv} init ${ZSH_VERSION:+zsh} - )"
    goenv $*
  }
fi

# --------------------------------------------------------------------------
for dir in "$HOME"/.asdf/{bin,shims} ; do
  _safe_add_to_path "$dir"
done

# --------------------------------------------------------------------------
# vim: set syntax=sh ft=sh sw=2 ts=2 expandtab:
