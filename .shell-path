# --------------------------------------------------------------------------
_is_dir() {
  local _dir="$1"

  [[ -n "$_dir" ]] || return 1
  [[ -d "$_dir" ]] || return 1

  return 0
}
# --------------------------------------------------------------------------
_is_in_path() {
  local _dir="$1"
  local _path="$2"

  [[ -z "${_dir}"  ]] && return 1
  [[ -z "${_path}"  ]] && return 1
  [[ "^${_dir}$" =~ ${_path} ]] && return 0
  [[ "^${_dir}:" =~ ${_path} ]] && return 0
  [[ ":${_dir}$" =~ ${_path} ]] && return 0
  [[ ":${_dir}:" =~ ${_path} ]] && return 0

  return 1
}
# --------------------------------------------------------------------------
_add_to_path() {
  local _dir="$1"
  local _path="$2"

  if ! _is_dir "${_dir}" ; then
    echo "${_path}"
    return
  fi

  if _is_in_path "${_dir}" "${_path}" ; then
    echo "${_path}"
    return
  fi

  _path="${_path}:${_dir}"
  _path="${_path%%:}"
  _path="${_path##:}"

  echo "${_path}"
}
# --------------------------------------------------------------------------
_clean_path() {
  local _path="$1"

  _new="/bin"

  while read -d: -r _dir ; do
    _new="$(_add_to_path "${_dir}" "${_new}")"
  done < <(echo "$_path")

  echo "${_new}"
}
# --------------------------------------------------------------------------
declare _newpath=""
# --------------------------------------------------------------------------
for _dir in \
  $HOME/bin \
  $HOME/{.go,.cargo,.rbenv,.pyenv,.nodenv,.asdf}/{bin,shims} \
  /Applications/VMware\ Fusion.app/Contents/Library \
  /Applications/VirtualBox.app/Contents/MacOS \
  /Applications/Postgres.app/Contents/Versions/latest/bin \
  /{usr,opt}/local/heroku/bin \
  /usr/local/share/dotnet \
  /{usr,opt,Apps}/{local,X11,opt}/{bin,sbin} \
  /usr/local/opt/openssl/bin \
  /{opt,usr}/{bin,sbin,libexec} \
  /{bin,sbin}
do
  _newpath="$(_add_to_path "${_dir}" "${_newpath}")"
done

while read -r _pathfile ; do
  while read -r _dir ; do
    _newpath="$(_add_to_path "${_dir}" "${_newpath}")"
  done < <(cat "$_pathfile")
done < <(find /etc/paths /etc/paths.d -type f  2>/dev/null)

# --------------------------------------------------------------------------
export PATH="${_newpath}"
# --------------------------------------------------------------------------
for _version_manager in rbenv nodenv pyenv ; do
  command -v "${_version_manager}" >& /dev/null && eval "$("${_version_manager}" init -)"
done
# --------------------------------------------------------------------------
export PATH="${_newpath}"
# --------------------------------------------------------------------------
if command -v fnm >&/dev/null ; then
  eval "$(fnm env --multi)"
fi
# --------------------------------------------------------------------------
# vim: set syntax=sh ft=sh sw=2 ts=2 expandtab:
